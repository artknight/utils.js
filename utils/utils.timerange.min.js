UTILS.Timerange=class extends UTILS.Base{constructor(data={}){if(super(data),_log(this.getObjectName()+" --\x3e instantiated!",this.getId(),this),!("target"in data))throw new Error("@target must be specified upon initialization!");return"options"in data&&this.setOptions(data.options),"range"in data&&this.setTimeRange(data.range),"date"in data&&this.setDate(data.date),"onShow"in data&&this.addCallback("onShow",data.onShow),"onHide"in data&&this.addCallback("onHide",data.onHide),"onStart"in data&&this.addCallback("onStart",data.onStart),"onStop"in data&&this.addCallback("onStop",data.onStop),"onSlide"in data&&this.addCallback("onSlide",data.onSlide),this._initSlider(),this}getDefaults(){return{object:"utils.timerange",version:"1.0.3",$wrapper:null,is_shown:!1,is_enabled:!0,date:moment(),is_date_editable:!0,time_format:"h:mm A",time_label_format:"h A",date_format:"MM/DD/YYYY",allow_past_dates:!1,EditableDate:null,range:{start:540,end:960},settings:{range:{min:0,max:1440},tooltips:[!0,!0],connect:!0,step:15,format:{to:this._formatDisplayTime.bind(this),from:function(val){return val}},pips:{mode:"steps",stepped:!0,density:4,format:{to:function(total_mins){var range=this._getHoursMinsFromTotalMins(total_mins),time_label_format=this.getTimeLabelFormat();return moment(range.hrs+":"+range.mins,"HH:mm").format(time_label_format)}.bind(this),from:function(val){return val}},filter:function(value,type){return value%60==0?Math.floor(value/60)%2==1?2:1:0}}}}}clean(){return this.values.$wrapper.remove(),this}_create(){return this.values.$wrapper||(this.values.$wrapper=$('\n\t\t\t\t<div class="app-timerange hide">\n\t\t\t\t\t<div class="slider-header">\n\t\t\t\t\t\t<div class="slider-header-date">Date: <span></span></div>\n\t\t\t\t\t\t<div class="slider-header-timerange">Time: <span class="slider-start"></span> - <span class="slider-end"></span></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="slider-range"></div>\n\t\t\t\t</div>\n\t\t\t'),this.values.$wrapper.data("$timerange",this)),this.values.$wrapper}enable(){if(!this.isEnabled()){var $slider=this.getWrapper().find(".slider-range"),EditableDate=this._getEditableDate();$slider.removeAttr("disabled"),EditableDate&&EditableDate.enable(),this.values.is_enabled=!0}return this}disable(){if(this.isEnabled()){var $slider=this.getWrapper().find(".slider-range"),EditableDate=this._getEditableDate();$slider.attr("disabled","disabled"),EditableDate&&EditableDate.disable(),this.values.is_enabled=!1}return this}isEnabled(){return this.values.is_enabled}isShown(){return this.values.is_shown}isDateEditable(){return this.values.is_date_editable}setDateEditableState(state){return this.values.is_date_editable=!!state,this}getDate(){return this.values.date}setDate(date){var date_format=this.getDateFormat();return _.isString(date)?this.values.date=moment(date,date_format):moment.isMoment(date)?this.values.date=date:this.values.date=moment(),this.updateDateDisplay(),this}isAllowPassedDates(){return this.values.allow_past_dates}setAllowPassedDates(state){return this.values.allow_past_dates=!!state,this}getDateFormat(){return this.values.date_format}setDateFormat(format){return this.values.date_format=format,this}getTimeFormat(){return this.values.time_format}setTimeFormat(format){return this.values.time_format=format,this}getTimeLabelFormat(){return this.values.time_label_format}setTimeLabelFormat(format){return this.values.time_label_format=format,this}getWrapper(){return this.values.$wrapper}_formatDisplayTime(total_mins){var range=this._getHoursMinsFromTotalMins(total_mins),time_format=this.getTimeFormat();return moment(range.hrs+":"+range.mins,"HH:mm").format(time_format)}_getEditableDate(){return this.values.EditableDate}_setEditableDate(EditableDate){return this.values.EditableDate=EditableDate,this}updateDateDisplay(){var date=this.getDate(),date_format=this.getDateFormat(),is_date_editable=this.isDateEditable(),allow_passed_dates=this.isAllowPassedDates(),$slider_date=this.getWrapper().find(".slider-header-date span");if(is_date_editable){var EditableDate=this._getEditableDate();if(!EditableDate){var editable_options={target:$slider_date,type:"date",options:{format:date_format,startDate:allow_passed_dates?0:"+0d"},value:date.format(date_format),onAfterSave:function(Editable){this.setDate(Editable.getValue()),this.fns("onStop")}.bind(this)};EditableDate=new UTILS.Editable(editable_options).enable(),this._setEditableDate(EditableDate)}}else $slider_date.html(date.format(date_format));return this}updateTimeDisplay(){var range=this.getTimeRange(),$wrapper=this.getWrapper(),$start=$wrapper.find(".slider-start"),$end=$wrapper.find(".slider-end");return $start.html(this._formatDisplayTime(range.start)),$end.html(this._formatDisplayTime(range.end)),this}setTarget(target){return super.setTarget(target),this.values.$target.append(this._create()),this}_initSlider(){var $slider=this.getWrapper().find(".slider-range"),range=($slider.find(".custom-slider-input"),this.getTimeRange()),options=this.getOptions();_.extend(options,{start:[range.start,range.end]});try{$slider[0].noUiSlider.destroy()}catch(e){}return this.setOptions(options),noUiSlider.create($slider[0],options),$slider[0].noUiSlider.on("update",this._onSlide.bind(this)),$slider[0].noUiSlider.on("start",this._onStart.bind(this)),$slider[0].noUiSlider.on("end",this._onStop.bind(this)),this}getOptions(){return this.values.settings}setOptions(options={}){return"min"in options&&(this.values.settings.range.min=options.min,delete options.min),"max"in options&&(this.values.settings.range.max=options.max,delete options.max),"date_editable"in options&&(this.setDateEditableState(options.date_editable),delete options.date_editable),"time_format"in options&&(this.setTimeFormat(options.time_format),delete options.time_format),"time_label_format"in options&&(this.setTimeLabelFormat(options.time_label_format),delete options.time_label_format),"date_format"in options&&(this.setDateFormat(options.date_format),delete options.date_format),"allow_past_dates"in options&&(this.setAllowPassedDates(options.allow_past_dates),delete options.allow_past_dates),_.extend(this.values.settings,options),this}getTimeRange(){return this.values.range}getFormattedTimeRange(){var range=this.getTimeRange();return{start:this._formatDisplayTime(range.start),end:this._formatDisplayTime(range.end)}}getDateTimeRange(){return _.extend({},this.values.range,{date:this.getDate()})}getFormattedDateTimeRange(){var formatted_range=this.getFormattedTimeRange(),date=this.getDate(),date_format=this.getDateFormat();return _.extend({},formatted_range,{date:date.format(date_format)})}_getHoursMinsFromTotalMins(total_mins){return{hrs:Math.floor(total_mins/60),mins:Math.floor(total_mins)%60}}getDateTimeRangeAsMoment(){var range=this.getTimeRange(),range_start=this._getHoursMinsFromTotalMins(range.start),range_end=this._getHoursMinsFromTotalMins(range.end),date=this.getDate();return{start:date.clone().hours(range_start.hrs).minutes(range_start.mins).seconds(0),end:date.clone().hours(range_end.hrs).minutes(range_end.mins).seconds(0)}}_normalizeMinutes(mins){var options=this.getOptions();return mins&&(mins=options.step*Math.ceil(mins/options.step))>options.max&&(mins=options.max),mins}setTimeRange(range){return _.isPlainObject(range)&&("start"in range&&(range.start=this._normalizeMinutes(range.start)),"end"in range&&(range.end=this._normalizeMinutes(range.end)),_.extend(this.values.range,range)),this}show(){var $wrapper=this.getWrapper();return this.updateDateDisplay(),this.updateTimeDisplay(),$wrapper.removeClass("hide"),this.fns("onShow"),this.values.is_shown=!0,this}hide(){var $wrapper=this.getWrapper();return this.fns("onHide"),$wrapper.addClass("hide"),this.values.is_shown=!1,this}_onSlide(values,handle,raw_values){var start_mins=Math.floor(raw_values[0]),end_mins=Math.floor(raw_values[1]);this.setTimeRange({start:start_mins,end:end_mins}),this.updateTimeDisplay(),this.fns("onSlide")}_onStart(event,ui){this.fns("onStart")}_onStop(event,ui){this.getWrapper().find(".slider-header-timerange").velocity("callout.flash"),this.fns("onStop")}},"undefined"!=typeof module&&module.hasOwnProperty("exports")&&(module.exports=UTILS.Timerange);