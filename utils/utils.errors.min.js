UTILS.Errors={values:{space:{},effects:{shake:"callout.shake",bounce:"callout.bounce",flash:"callout.flash",pulse:"callout.pulse",tada:"callout.tada"}},setSpace:function(errors={}){_.extend(UTILS.Errors.values.space,errors)},setEffects:function(effects={}){_.extend(UTILS.Errors.values.effects,effects)},showTooltips:function(data){var direction="direction"in data?data.direction:"right";_.each(data.errors,function(error){if("container"in data){var html='<div class="alert alert-danger" role="alert"><i class="mdi mdi-alert mdi-24px margin-r10"></i>'+this.getMessage(error.error)+"</div>";data.container instanceof UTILS.Box?data.container.set({html:html}):$(data.container).html(html)}else"fields"in error&&error.fields.length?_.each(error.fields,function(field){let $input=field instanceof jQuery?field:/^(\.|#)/.test(field)?$(field):$("#"+field);$input.length&&($input.hasClass("selectized")?$input=$input.nextNodeByClass("selectize-input"):(Editable=$input.data("utils.editable"))?$input=Editable.isContentEditable()?Editable.getTarget():Editable.getInputField():$input.select(),"type"in data&&"simple"==data.type?$input.velocity("callout.pulse",{begin:function(){$input.addClass("error-field"),_.delay(function(){$input.removeClass("error-field")},5e3)}}):TOOLTIP.hint({target:$input,type:"error",msg:UTILS.Errors.getMessage(error.error),duration:2e4,direction:direction}))}):UTILS.Errors.show(error.error);"callback"in data&&_.isFunction(data.callback)&&data.callback(data),is_error=!0}.bind(this))},isError:function(data={},silent=!1){var is_error=!1;if("errors"in(data=_.isString(data)?{errors:[{error:data,fields:[]}]}:data)&&data.errors.length){var _onComplete=function(){!silent&&UTILS.Errors.showTooltips(data)};"fx"in data&&data.fx?(effect=UTILS.Errors.values.effects[data.fx.effect],effect&&$(data.fx.base).velocity(effect,{complete:_onComplete})):_onComplete(),is_error=!0}return is_error},getMessage:function(error){return error in UTILS.Errors.values.space?UTILS.Errors.values.space[error]:error.replace(/\\n/g,"<br>")},show:function(error,callback){var message=UTILS.Errors.getMessage(error);message.length&&new APP.Alert({type:"error",html:message.replace(/\\n/g,"<br>"),onClose:callback}).show()}},APP.values.errors&&UTILS.Errors.setSpace(APP.values.errors);