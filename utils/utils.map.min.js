UTILS.Map=class extends UTILS.Base{constructor(data={}){return super(data),_log(this.getObjectName()+" --\x3e instantiated!",this.getId(),this),this.setStyles(this.getDefaultConfig("styles")),this.setSettings(this.getDefaultConfig("settings")),this.setMarker(this.getDefaultConfig("marker")),this.setAddress(null),this.setType("roadmap"),this.setMapIcon(null),this.setMapStatic(!1),this.setTitle(""),"api_key"in data&&this.setApiKey(data.api_key),"styles"in data&&this.setStyles(data.styles),"title"in data&&this.setTitle(data.title),"settings"in data&&this.setSettings(data.settings),"address"in data&&this.setAddress(data.address),"type"in data&&this.setType(data.type),"latlong"in data&&this.setLatLong(data.latlong),"map_icon"in data&&this.setMapIcon(data.map_icon),"is_static"in data&&this.setMapStatic(data.is_static),"map_marker"in data&&this.setMarker(data.map_marker),"onShow"in data&&this.addCallback("onShow",data.onShow),"onHide"in data&&this.addCallback("onHide",data.onHide),"onMarkerShow"in data&&this.addCallback("onMarkerShow",data.onMarkerShow),this}getDefaults(){return{object:"utils.map",version:"1.0.0",$target:null,map_icon_default:"/images/icons/map-marker.png",is_shown:!1,api_key:"",map:{config:{styles:{},settings:{}},plugins:{maps:{plugin:"maps",ver:"3",options:{other_params:"sensor=false"},is_loaded:!1}}},marker:{is_created:!1},latlong:{lat:0,long:0}}}getDefaultConfig(config){return{styles:[{featureType:"landscape",stylers:[{gamma:.8},{visibility:"simplified"},{color:"#938080"},{saturation:-100},{lightness:51}]},{featureType:"road.local",stylers:[{saturation:-100},{lightness:-13},{visibility:"on"}]},{featureType:"road.highway",stylers:[{gamma:1.39},{saturation:3},{lightness:-10},{visibility:"on"}]},{featureType:"road.arterial",stylers:[{gamma:.86},{lightness:14},{visibility:"on"},{saturation:-25}]},{featureType:"water",stylers:[{lightness:-11},{saturation:-35}]},{featureType:"poi",stylers:[{visibility:"on"},{saturation:-100},{lightness:-24},{gamma:.88}]},{featureType:"poi"}],settings:{zoom:16,scrollwheel:!0,disableDefaultUI:!1,panControl:!0,zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,overviewMapControl:!0,draggable:!0,disableDoubleClickZoom:!0},marker:{$elm:$('<div id="map-marker-'+this.getId()+'" class="map-marker">'),$content:$('<div class="map-content">'),$img:$("<img>"),$header:$('<h2 class="map-marker-header">'),$body:$('<div class="map-marker-body">'),$shadow:$('<div class="map-shadow">'),is_special_marker:!1,contact:{img:"/images/icons/map-marker-340x160.jpg"},offset:{lat:-96e-5,lng:.0015}}}[config]}showError(error){alert(error||"unknown error has occurred.")}getApiKey(){return this.values.api_key}setApiKey(api_key){return this.values.api_key=api_key,this}getDom($elm){return $elm[0]}getMapIcon(type){return type&&/^default$/i.test(type)?this.values.map_icon_default:this.values.map_icon}setMapIcon(map_icon){return this.values.map_icon=map_icon,this}getTitle(){return this.values.title}setTitle(title){return this.values.title=title,this}getOffset(){return this.values.offset}setOffset(offset){return _.assign(this.values.offset,offset),this}getMarker(){return this.values.marker}setMarker(options){var marker=this.getMarker();_.extend(marker,options);var contact=this.getDefaultConfig("marker").contact;for(var k in contact)k in marker.contact||(marker.contact[k]=contact[k]);var offset=this.getDefaultConfig("marker").offset;for(var k in offset)k in marker.offset||(marker.offset[k]=offset[k]);return marker.$img.attr("src",marker.contact.img),this.setMapStatic(!!marker.is_special_marker),this}isMapStatic(){return!!this.values.is_static}setMapStatic(state){this.values.is_static=!!state;var settings={panControl:!0,zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,overviewMapControl:!0,draggable:!0,disableDoubleClickZoom:!0,scrollwheel:!0};if(state)for(var k in settings)settings[k]=!1;return this.setSettings(settings),this}getAddress(){return this.values.address}setAddress(address){return this.values.address=address,this}getType(){return this.values.type}setType(type){return this.values.type=type,this}getLatLong(){return this.values.latlong}setLatLong(latlong){return _.extend(this.values.latlong,latlong||{}),this}getSettings(){return this.values.map.config.settings}setSettings(settings){return _.extend(this.getSettings(),settings),this}getStyles(){return this.values.map.config.styles}setStyles(styles){return _.isArray(styles)&&(this.values.map.config.styles=styles),this}allRrequirementsLoaded(){var allow=!0,msgs=[];return this.getTarget()||msgs.push("@target must be specified"),this.getAddress().length||msgs.push("@address must be specified"),msgs.length&&(allow=!1,console.error(msgs.join("\n\n"))),allow}show(){return this.allRrequirementsLoaded()&&this.loadPlugin("maps",function(){var settings=this.getSettings(),map_icon=this.getMapIcon(),latlong=this.getLatLong(),marker=this.getMarker();settings.mapTypeId=google.maps.MapTypeId[{roadmap:"ROADMAP",satellite:"SATELLITE",hybrid:"HYBRID",terrain:"TERRAIN"}[this.getType()]],settings.styles=this.getStyles(),settings.center=new google.maps.LatLng(latlong.lat,latlong.long);var Map=new google.maps.Map(this.getDom(this.getTarget()),settings);(new google.maps.Geocoder).geocode({address:this.getAddress()},function(results,status){if(status==google.maps.GeocoderStatus.OK){var loc=results[0].geometry.location;if(marker.is_special_marker)var coords=new google.maps.LatLng(loc.lat()+marker.offset.lat,loc.lng()+marker.offset.lng);else coords=new google.maps.LatLng(loc.lat(),loc.lng());Map.setCenter(coords);var data={map:Map,position:loc,title:this.getTitle(),disableAutoPan:!0};map_icon?data.icon=map_icon:(data.icon=this.getMapIcon("default"),marker.is_special_marker&&(data.position=new google.maps.LatLng(loc.lat()+5e-6,loc.lng()+1e-5)));var Marker=new google.maps.Marker(data),content=this.renderMarker(),info_window=new google.maps.InfoWindow({content:content,maxWidth:340});marker.is_special_marker?Marker.setMap(Map):google.maps.event.addListener(Marker,"click",function(event){info_window.open(Map,Marker),this.fns("onMarkerShow")}.bind(this)),google.maps.event.addListener(Marker,"click",function(event){_log(event)})}}.bind(this)),this.fns("onShow"),this.values.is_shown=!0}.bind(this)),this}hide(){return this.fns("onHide"),this}createMarker(){if(!this.values.marker.is_created){var $target=this.getTarget(),marker=this.getMarker();$target.append(marker.$elm.append(marker.$content.append(marker.$img,marker.$header,marker.$body),marker.$shadow)),marker.is_created=!0}return this}formatMarkerContent(content,type,_class){var html=null;if(content&&type)switch(type){case"phone":html='<span class="phone">'+content+"</span>";break;case"fax":html='<span class="fax">'+content+"</span>";break;case"email":html='<span class="email"><a href="#" onclick="mailto:'+content+",'Please get in touch');return false;\">"+content+"</a></span>";break;case"address":html='<span class="addr">'+content.replace(/(,){1}/,'</span><span class="addr">')+"</span>";break;case"directions":html='<span><a href="http://maps.google.com/maps?q='+UTILS.format.urlEncode(content)+'" target="_blank"><i class="mdi mdi-map-marker"></i> Get Directions</a></span>'}return html}getMarkerContent(){var marker=this.getMarker(),address=this.getAddress();return`<table class="map-marker-content">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ul class="address">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t${this.formatMarkerContent(address,"address")}\n\t\t\t\t\t\t\t\t${"email"in marker.contact&&this.formatMarkerContent(marker.contact.email,"email")}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ul class="address">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t${"phone"in marker.contact&&this.formatMarkerContent(marker.contact.phone,"phone")}\n\t\t\t\t\t\t\t\t${this.formatMarkerContent(address,"directions")}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>`}renderMarker(){var $content=null,marker=this.getMarker(),title=this.getTitle(),address=this.getAddress();return marker.is_special_marker?(marker.is_created||this.createMarker(),marker.$header.html(title),marker.$body.html(this.getMarkerContent()),$content=this.getDom(marker.$elm)):$content=(title.length?title+"<br>":"")+address,$content}loadPlugin(plugin,callback){var _plugin=this.getPlugin(plugin),_callback=function(){_plugin&&!_plugin.is_loaded&&(_plugin.is_loaded=!0),_.isFunction(callback)&&callback()}.bind(this);return _plugin&&!_plugin.is_loaded?google.load(_plugin.plugin,_plugin.ver,_.extend(_plugin.options,{callback:_callback,other_params:"key="+this.getApiKey()})):_callback(),this}resetPlugin(plugin,callback){var _plugin=this.getPlugin(plugin);return _plugin&&(_plugin.is_loaded=!1,this.loadPlugin(_plugin,callback)),this}getPlugin(plugin){return _.isString(plugin)?this.values.map.plugins[plugin]:plugin}isPluginLoaded(plugin){var _plugin=this.getPlugin(plugin);return!!_plugin&&_plugin.is_loaded}},"undefined"!=typeof module&&module.hasOwnProperty("exports")&&(module.exports=UTILS.Map);