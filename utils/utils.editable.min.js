const EDITABLE=class extends UTILS.Base{constructor(data={}){return super(data),void 0!==APP.values.company.format.date&&(this.values.date_options=_.extend({},APP.values.company.format.date,this.values.date_options)),this._onSave=_.debounce(this.__onSave__.bind(this),500),"params"in data&&this.setParams(data.params),"field"in data&&this.setFieldName(data.field),"type"in data&&this.setType(data.type),"options"in data&&this.setOptions(data.options),"css"in data&&this.setCss(data.css),"filterMethodForEditingValue"in data&&this.setFilterMethodForEditingValue(data.filterMethodForEditingValue),"filterMethodForDisplayValue"in data&&this.setFilterMethodForDisplayValue(data.filterMethodForDisplayValue),"tabbing"in data&&this.setInlineTabbing(data.tabbing),"lazyload"in data&&this.setLazyLoadState(data.lazyload),"toggle"in data&&this.setToggleAction(data.toggle),"items"in data&&this.setItems(data.items),"container"in data&&this.setContainer(data.container),"onShow"in data&&this.addCallback("onShow",data.onShow),"onHide"in data&&this.addCallback("onHide",data.onHide),"onCancel"in data&&this.addCallback("onCancel",data.onCancel),"onBeforeSave"in data&&this.addCallback("onBeforeSave",data.onBeforeSave),"onAfterSave"in data&&this.addCallback("onAfterSave",data.onAfterSave),"onSaveError"in data&&this.addCallback("onSaveError",data.onSaveError),"onActionTriggered"in data&&this.addCallback("onActionTriggered",data.onActionTriggered),"onInputCreate"in data&&this.addCallback("onInputCreate",data.onInputCreate),"value"in data&&this.setValue(data.value),"empty"in data&&this.setEmptyValue(data.empty),this}getDefaults(){return{object:"utils.editable",version:"0.4.0",direction:"top",type:{base:"input",option:null},css:"",params:null,$cell:null,$input:null,$container:$("body"),value:null,DatePicker:null,date_options:{container:this.getContainer(),orientation:"auto",autoclose:!1,format:APP.values.company.format.date||"MM/DD/YYYY",startDate:moment().add(1,"day").toDate()},field_name:"@field",empty_value:"--",is_lazyload:!1,toggle_action:"click",Spinner:new SPINNER({type:"small",center:!0,color:"black",blur:!0}),is_inline_tabbing:!1,items:[],is_enabled:!1,is_shown:!1,display_filtermethod:null,edit_filtermethod:null}}getCss(){return this.values.css}setCss(css){this.values.css=css||""}setAjaxData(ajax){return _.isPlainObject(ajax)?super.setAjaxData(ajax):this.values.ajax=null===ajax?{}:ajax,this}getContainer(){return this.values.$container}setContainer(container){return this.values.$container=$(container),this}isLazyLoad(){return this.values.is_lazyload}setLazyLoadState(state){return this.values.is_lazyload=!!state,this}getEmptyValue(value){return _.isFunction(this.values.empty_value)?this.values.empty_value(value,this):this.values.empty_value}setEmptyValue(empty_value){return empty_value&&(this.values.empty_value=empty_value),this}getItems(){return this.values.items}setItems(items){return _.isArray(items)&&(_.isString(items.first())&&(items=_.map(items,function(item){return{label:item,value:item}})),this.values.items=items),this}_filterValueForEditing(value){var _value=value;return"function"==typeof this.values.edit_filtermethod&&(_value=this.values.edit_filtermethod(value)),this.values.empty_value===_value&&(_value=""),_value}_filterValueForDisplay(value){var type=this.getType(),_value=value;if("function"==typeof this.values.display_filtermethod)_value=this.values.display_filtermethod(value);else if(/^(select|radio)$/.test(type.base)){var item=_.find(this.getItems(),function(item){return item.value==value});item&&(_value=item.label)}return _value.length||(_value=this.values.empty_value),_value}_onActionTriggered(){var $target=this.getTarget(),$cell=this.getCell(),is_type_date=this.isTypeDate(),is_type_checkbox=this.isTypeCheckbox(),is_type_radio=this.isTypeRadio(),is_selectize=this.isSelectize(),$input=this.getInputField(),$next_editable=$target.nextNodeByClass("editable-target"),value=this.getValue(),is_processing=!1,_triggerNextEditable=function(){$next_editable.trigger(this.getToggleAction())}.bind(this);this.fns("onActionTriggered"),is_type_date||is_type_checkbox||($input.on("keydown.utils.editable",function(event){var $field=$(event.target);[13,27].isIn(UTILS.getCharKey(event))?(event.preventDefault(),this._onSave($field.val()),is_processing=!0):[9].isIn(UTILS.getCharKey(event))&&this.isInlineTabbing()&&(event.preventDefault(),is_processing=!0,$next_editable.length?this._onSave($field.val(),_triggerNextEditable):this._onSave($field.val()))}.bind(this)),is_selectize?$input.val(value).selectize({onFocus:function(){is_processing=!1},onChange:function(){var value=$input[0].selectize.getValue();value.length&&(this._onSave(value),is_processing=!0)}.bind(this),onBlur:function(){var value=$input[0].selectize.getValue();value.length&&!is_processing&&(this._onSave(value),is_processing=!0)}.bind(this),selectOnTab:this.isInlineTabbing()}):($input.on("focus.utils.editable",function(event){event.preventDefault(),is_processing=!1}),this.isInlineTabbing()||$input.on("change.utils.editable",function(event){event.preventDefault(),is_processing||(this._onSave($(event.target).val()),is_processing=!0)}.bind(this)),$input.on("blur.utils.editable",function(event){event.preventDefault(),is_processing||(this._onSave($(event.target).val()),is_processing=!0)}.bind(this))),$target.hide().after($cell),this._show(),is_selectize?$input[0].selectize.focus():is_type_radio?$input.filter(":checked").focus():$input.focus())}enable(){if(_log("editable --\x3e enabled",this.getId()),!this.values.is_enabled){var $target=this.getTarget(),is_type_checkbox=this.isTypeCheckbox(),$cell=this.getCell();if($cell&&$cell.length)is_type_checkbox?this.getInputField().prop("disabled",!1):$target.hasClass("readonly")&&$target.removeClass("readonly");else{var toggle_action=this.getToggleAction(),is_lazyload=this.isLazyLoad();this._createCell(),is_lazyload||is_type_checkbox||$target.on(toggle_action,function(event){event.preventDefault(),this._onActionTriggered()}.bind(this))}this.values.is_enabled=!0}return this}disable(){if(_log("editable --\x3e disabled",this.getId()),this.values.is_enabled){var $target=this.getTarget();this.isTypeCheckbox()?this.getInputField().prop("disabled",!0):$target.addClass("readonly"),this.values.is_enabled=!1}return this}getToggleAction(){return this.values.toggle_action}setToggleAction(toggle_action){return toggle_action&&(this.values.toggle_action=/\.utils\.editable$/.test(toggle_action)?toggle_action:toggle_action+".utils.editable"),this}getSpinner(){return this.values.Spinner}setFilterMethodForEditingValue(method){return"function"==typeof method&&(this.values.edit_filtermethod=method),this}setFilterMethodForDisplayValue(method){return"function"==typeof method&&(this.values.display_filtermethod=method),this}getFieldName(){return this.values.field_name}setFieldName(field_name){return field_name&&(this.values.field_name=field_name),this}isInlineTabbing(){return this.values.is_inline_tabbing}setInlineTabbing(state){return this.values.is_inline_tabbing=!!state,this}getDateFormat(){return this.values.date_format}setDateFormat(date_format){return date_format&&(this.values.date_format=date_format),this}setTarget(target){return super.setTarget(target),this.getTarget().addClass("editable-target"),this.getTarget().html().length||this._setDisplayValue(this.values.empty_value),this}getType(){return this.values.type}setType(type){return type&&(this.values.type={base:type.split("-")[0],option:type.split("-")[1]}),this}isTypeDate(){return/^date$/i.test(this.getType().base)}isTypeCheckbox(){return/^checkbox/i.test(this.getType().base)}isTypeRadio(){return/^radio/i.test(this.getType().base)}isSelectize(){return/^selectize/i.test(this.getType().option)}getValue(){return this.values.value}setValue(value){if(this.values.value=value,this.isLazyLoad()){var $target=this.getTarget(),target_options=$target.data("editable-options");_.isPlainObject(target_options)&&$target.data("editable-options",_.extend(target_options,{value:value}))}return this._setDisplayValue(value),this}_setDisplayValue(value){var $target=this.getTarget(),is_type_date=this.isTypeDate(),is_type_checkbox=this.isTypeCheckbox(),_value=is_type_date||is_type_checkbox?value:this._filterValueForDisplay(value);return is_type_checkbox||$target.html(_value),this}getDisplayValue(){var $target=this.getTarget();return this.isTypeCheckbox()?this.getValue():$target.text()}getParams(){return this.values.params}setParams(params={}){return this.values.params=params,this}_onCancel(){_log(this.getObjectName()+" --\x3e action cancelled",this.getId()),this._hide(),this.fns("onCancel")}getInputField(){return this.values.$input}setInputField(input){return this.values.$input=$(input),this}getCell(){return this.values.$cell}getOptions(){return this.values.options}setOptions(options){return _.extend(this.values.options,options),this}_createCell(){var type=this.getType(),methods={input:"_createInput",textarea:"_createTextarea",select:"_createDropdown",date:"_createDate",checkbox:"_createCheckbox",radio:"_createRadio"};if(!(type.base in methods))throw new Error("incorrect @type specified!");return this.values.$cell=this[methods[type.base]](),this.fns("onInputCreate"),_log(this.getObjectName()+" --\x3e "+JSON.stringify(type)+" cell created",this.values.$cell),this}_show(){return this.values.is_shown||(this.fns("onShow"),this.values.is_shown=!0),this}_hide(){return this.values.is_shown&&(this.fns("onHide"),this.values.is_shown=!1),this}_createInput(){var display_value=this.getDisplayValue(),css=this.getCss(),$wrapper=$('<form class="form-inline editable-form"><div class="form-group '+css+'"><label class="sr-only">Enter Text</label></div></form>'),$input=$('<input type="text" class="form-control popup-editable-field" value="'+this._filterValueForEditing(display_value)+'">');return $input.on("focus.utils.editable",function(event){setTimeout(function(){this.selectionStart=this.selectionEnd=1e4}.bind(this),0)}),this.setInputField($input),$wrapper.find(".form-group").append($input),$wrapper}_createTextarea(){var display_value=this.getDisplayValue(),css=this.getCss(),$wrapper=$('<form class="form-inline editable-form"><div class="form-group '+css+'"><label class="sr-only">Enter Text</label></div></form>'),$textarea=$('<textarea class="form-control popup-editable-field" rows="3">'+this._filterValueForEditing(display_value)+"</textarea>");return this.setInputField($textarea),$wrapper.find(".form-group").append($textarea),$wrapper}_createDropdown(){var value=this.getValue(),css=this.getCss(),$wrapper=$('<form class="form-inline editable-form"><div class="form-group '+css+'"><label class="sr-only">Select One</label></div></form>'),$dropdown=$('<select class="form-control popup-editable-field"></select>');return this.setInputField($dropdown),$wrapper.find(".form-group").append($dropdown),$dropdown.append(_.map(this.getItems(),function(item){return $('<option value="'+item.value+'">'+item.label+"</option>")}.bind(this))),value&&value.length&&$dropdown.val(value),$wrapper}_createDate(){var $target=this.getTarget(),display_value=this.getDisplayValue(),css=this.getCss(),options=this.getOptions();return $target.data("date",display_value),$target.datepicker(options).on("changeDate",function(event){this._onSave(moment(event.date).format(options.format))}.bind(this)).on("show",function(event){$target.data("datepicker").picker.addClass(css)}),this.values.DatePicker=$target.data("datepicker"),this.values.DatePicker.picker}_createCheckbox(){var $target=this.getTarget(),id=UTILS.uuid(),control_class=/switch/i.test(this.getType().option)?"custom-toggle my-2":"custom-checkbox mb-3",display_value=this.getDisplayValue(),css=this.getCss(),options=this.getOptions(),$wrapper=$('<form class="form-inline editable-form"><div class="form-group '+css+'"><div class="custom-control '+control_class+'"><label class="custom-control-label" for="'+id+'">'+("desc"in options?options.desc:"")+"</label></div></div></form>"),$input=$('<input type="checkbox" id="'+id+'" class="custom-control-input popup-editable-field" value="'+display_value+'">');return $input.prop("checked",/^(true|yes|ok)$/i.test(display_value)),this.setInputField($input),$wrapper.find(".custom-control").prepend($input),$input.on("change.utils.editable",function(event){event.preventDefault(),this._onSave($input.prop("checked"))}.bind(this)),$target.html($wrapper),$wrapper}_createRadio(){var value=this.getValue(),name=UTILS.uuid(),css=this.getCss(),$wrapper=$('<form class="form-inline editable-form '+css+'"></form>');$wrapper.append(_.map(this.getItems(),function(item){var id=UTILS.uuid();return`<div class="form-group row">\n\t\t\t\t\t\t\t<div class="custom-control custom-radio mb-1">\n\t\t\t\t\t\t\t\t<input type="radio" id="${id}" name="${name}" class="custom-control-input popup-editable-field" value="${item.value}">\n\t\t\t\t\t\t\t\t<label class="custom-control-label" for="${id}">${item.label}</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`}.bind(this)));var $inputs=$wrapper.find('.custom-control-input[type="radio"]');return this.setInputField($inputs),value&&value.length&&$inputs.filter('[value="'+value+'"]').prop("checked",!0),$wrapper}_onBeforeHide(){var $input=this.getInputField();return this.isTypeCheckbox()||($input&&(this.isSelectize()?$input[0].selectize.destroy():$input.off("keydown.utils.editable change.utils.editable blur.utils.editable focus.utils.editable")),this.getCell().remove()),this.getTarget().show(),this.getSpinner().hide(),this}__onSave__(value,callback){var is_type_date=this.isTypeDate(),is_type_checkbox=this.isTypeCheckbox(),$target=this.getTarget(),$cell=this.getCell(),$editable=is_type_date?this.values.DatePicker.picker:is_type_checkbox?$target.find(".custom-control"):$cell,spinner=this.getSpinner().set({target:$editable}),ajax_settings=this.getAjaxData(),params=this.getParams(),field_name=this.getFieldName();if(this.getDisplayValue()!=this._filterValueForDisplay(value)){_log(this.getObjectName()+" --\x3e value changed, saving...",this.getId());var _onError=function(error){spinner.hide(),error instanceof Error&&ERRORS.show(error.message),this._onBeforeHide(),this._hide(),is_type_date&&this.values.DatePicker.hide(),this.fns("onSaveError",error)}.bind(this),_onSuccess=function(response){spinner.hide(),_.isString(response)&&(response=JSON.parse(response)),response.direction="top",ERRORS.isError(response)||(this.setValue(value),this._onBeforeHide(),$target.velocity("callout.flash"),this._hide(),is_type_date&&this.values.DatePicker.hide(),_.isFunction(callback)&&callback.call(null),this.fns("onAfterSave",response))}.bind(this);if(this.fns("onBeforeSave"),spinner.show(),is_type_checkbox&&spinner.getSpinner().css({left:15}),"url"in ajax_settings){var url=ajax_settings.url,options={method:"POST",data:_.assign({},_.isFunction(params)?params.call(null,value,this):params)};params||(options.data[field_name]=is_type_checkbox?!!value:value),"method"in ajax_settings&&(options.data.method=ajax_settings.method),"content_type"in ajax_settings&&(options.content_type=ajax_settings.content_type,/\/json$/.test(ajax_settings.content_type)&&(options.data=JSON.stringify(options.data))),$.fetch(url,options).then(_onSuccess).catch(_onError)}else _onSuccess({errors:[],value:value})}else _log(this.getObjectName()+" --\x3e same value, no action taken",this.getId()),this._onBeforeHide(),this._hide(),_.isFunction(callback)&&callback.call(null);return this}};