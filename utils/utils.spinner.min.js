UTILS.Spinner=class extends UTILS.Base{constructor(data={}){return super(data),this.create(),"msg"in data&&this.setMessage(data.msg),"color"in data&&this.setColor(data.color),"type"in data&&this.setType(data.type),"shadow"in data&&this.setShadow(data.shadow),"standalone"in data&&this.setStandalone(data.standalone),"blur"in data&&this.setBlur(data.blur),"onCreate"in data&&this.addCallback("onCreate",data.onCreate),"onBeforeShow"in data&&this.addCallback("onBeforeShow",data.onBeforeShow),"onShow"in data&&this.addCallback("onShow",data.onShow),"onHide"in data&&this.addCallback("onHide",data.onHide),this}getDefaults(){return{object:"utils.spinner",version:"2.1.4",opts:{},divs:{},is_shown:!1,types:["tiny","small","medium","large","x2","x3"],type:"small",center:!1,blur:!1,shadow:!1,standalone:!1,color:"black",msg:"",$icon_success:$('<i class="mdi mdi-check spinner-mode-icon success"></i>'),$icon_error:$('<i class="mdi mdi-alert spinner-mode-icon error"></i>')}}clean(){if(this.values.$elm.remove(),this.values.blur&&this.values.$target.length){var blur_instance=this.values.$target.data("utils.blur");blur_instance&&blur_instance.hide()}return this.values.is_shown=!1,this}show(){this.fns("onBeforeShow");let blur_instance=null,color=this.getColor();if(this.values.blur&&this.values.$target.length){if(!((blur_instance=this.values.$target.data("utils.blur"))instanceof UTILS.Blur)){var blur_options={target:this.values.$target,color:"white"};"object"==typeof this.values.blur&&_.assign(blur_options,this.values.blur),blur_instance=new UTILS.Blur(blur_options)}blur_instance.set({resize:this.values.$target.is("body")}).show()}return this.values.$elm.addClass(color),!this.values.center&&this.values.$target.hasClass("box")?this.values.$target.find(".box-mainbody").append(this.values.$elm):this.values.$target.append(this.values.$elm),this.values.center&&this.setCenter(),blur_instance&&this.values.$elm.css("z-index",blur_instance.getZindex()+1),this.fns("onShow"),this.values.is_shown=!0,this}hide(){return this.fns("onHide"),this.clean(),this}setCenter(){let $target=this.values.$target[0]===$("#container")[0]||this.values.$target.is("body")?null:this.values.$target;return this.values.$elm.setCenter(null,$target),this}create(){return this.values.$elm=$('<div class="spinner"></div>'),this.values.divs.$icon=$('<div class="spinner-icon circle"></div>'),this.values.divs.$msg=$('<div class="spinner-msg"></div>'),this.values.$elm.append(this.values.divs.$icon,this.values.divs.$msg),this.fns("onCreate"),this}setTarget(target){return super.setTarget(target),target instanceof UTILS.Box&&(this.values.$target=target.getBox()),this}removeMode(){return this.values.$elm.removeClass("spinner-mode success error"),this}setMode(mode,message){switch(this.removeMode(),mode){case"success":this.values.$elm.addClass("spinner-mode success");break;case"error":this.values.$elm.addClass("spinner-mode error")}return message&&this.setMessage(message),this}getColor(){return this.values.color}setColor(color){return this.values.color=color,this}getType(){return this.values.type}setType(type){return this.values.type=type,this.values.$elm.removeClass(this.values.types.join(" ")).addClass(type),this}isShadow(){return this.values.$elm.hasClass("boxshadow")}setShadow(state){return this.values.shadow=!!state,this.values.$elm[state?"addClass":"removeClass"]("boxshadow"),this}isStandalone(){return this.values.standalone}setStandalone(state){return this.values.standalone=!!state,state?(this.values.$elm.addClass("pos-fixed"),this.values.center=!0,this.setColor("standalone")):this.values.$elm.removeClass("pos-fixed"),this}isBlur(){return this.values.blur}setBlur(blur){return this.values.blur="object"==typeof blur?_.extend(this.values.blur,blur):!!blur,this}getMessage(){return this.values.divs.$msg.find("span").html()}setMessage(message){var $message=this.values.divs.$msg.find("span");return this.values.msg=message,message.length?$message.length?$message.html(message):this.values.divs.$msg.html("<span>"+this.values.msg+"</span>"):$message.length&&$message.remove(),this}getSpinner(){return this.values.$elm}set(data){if(data)for(var k in data)switch(!0){case/^target$/.test(k):this.setTarget(data[k]);break;case/^type$/.test(k):this.setType(data[k]);break;case/^msg$/.test(k):this.setMessage(data[k]);break;case/^color$/.test(k):this.setColor(data[k]);break;case/^shadow$/.test(k):this.setShadow(data[k]);break;case/^standalone$/.test(k):this.setStandalone(data[k]);break;case/^blur$/.test(k):this.setBlur(data[k])}return this}};